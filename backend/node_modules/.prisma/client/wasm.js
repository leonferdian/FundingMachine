
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  password: 'password',
  avatar: 'avatar',
  isVerified: 'isVerified',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BankAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bankCode: 'bankCode',
  accountNumber: 'accountNumber',
  accountName: 'accountName',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentMethodScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  last4: 'last4',
  expiryMonth: 'expiryMonth',
  expiryYear: 'expiryYear',
  isDefault: 'isDefault',
  isActive: 'isActive',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FundingPlatformScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  description: 'description',
  apiUrl: 'apiUrl',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FundingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  platformId: 'platformId',
  amount: 'amount',
  profitShare: 'profitShare',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fundingId: 'fundingId',
  type: 'type',
  amount: 'amount',
  status: 'status',
  description: 'description',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  planId: 'planId',
  amount: 'amount',
  startDate: 'startDate',
  endDate: 'endDate',
  status: 'status',
  autoRenew: 'autoRenew',
  paymentId: 'paymentId',
  cancelledAt: 'cancelledAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  pushEnabled: 'pushEnabled',
  emailEnabled: 'emailEnabled',
  smsEnabled: 'smsEnabled',
  fundingUpdates: 'fundingUpdates',
  transactionAlerts: 'transactionAlerts',
  systemAlerts: 'systemAlerts',
  marketingEmails: 'marketingEmails',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserDeviceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  deviceToken: 'deviceToken',
  deviceType: 'deviceType',
  isActive: 'isActive',
  lastSeen: 'lastSeen',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  message: 'message',
  data: 'data',
  isRead: 'isRead',
  isDelivered: 'isDelivered',
  deliveredAt: 'deliveredAt',
  readAt: 'readAt',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SyncLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  deviceId: 'deviceId',
  status: 'status',
  syncedAt: 'syncedAt',
  conflictsResolved: 'conflictsResolved',
  error: 'error',
  version: 'version',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OfflineQueueScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  deviceId: 'deviceId',
  operation: 'operation',
  entityType: 'entityType',
  entityId: 'entityId',
  data: 'data',
  timestamp: 'timestamp',
  synced: 'synced',
  syncedAt: 'syncedAt',
  retryCount: 'retryCount',
  maxRetries: 'maxRetries',
  nextRetryAt: 'nextRetryAt',
  lastError: 'lastError',
  priority: 'priority',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SyncConflictScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  entityType: 'entityType',
  entityId: 'entityId',
  serverData: 'serverData',
  clientData: 'clientData',
  conflictFields: 'conflictFields',
  detectedAt: 'detectedAt',
  resolved: 'resolved',
  resolution: 'resolution',
  resolvedData: 'resolvedData',
  resolvedAt: 'resolvedAt',
  resolvedBy: 'resolvedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserAnalyticsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sessionId: 'sessionId',
  sessionStart: 'sessionStart',
  sessionEnd: 'sessionEnd',
  sessionDuration: 'sessionDuration',
  screenName: 'screenName',
  route: 'route',
  previousScreen: 'previousScreen',
  action: 'action',
  actionDetails: 'actionDetails',
  deviceType: 'deviceType',
  clientPlatform: 'clientPlatform',
  appVersion: 'appVersion',
  deviceInfo: 'deviceInfo',
  country: 'country',
  region: 'region',
  city: 'city',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  timestamp: 'timestamp',
  loadTime: 'loadTime',
  errorCount: 'errorCount',
  errorDetails: 'errorDetails'
};

exports.Prisma.FundingAnalyticsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  platformId: 'platformId',
  interactionType: 'interactionType',
  amountInvested: 'amountInvested',
  expectedReturn: 'expectedReturn',
  riskLevel: 'riskLevel',
  rating: 'rating',
  review: 'review',
  recommendationScore: 'recommendationScore',
  conversionStep: 'conversionStep',
  conversionValue: 'conversionValue',
  timeSpent: 'timeSpent',
  firstSeen: 'firstSeen',
  lastInteraction: 'lastInteraction',
  sessionId: 'sessionId',
  deviceType: 'deviceType',
  devicePlatform: 'devicePlatform',
  timestamp: 'timestamp'
};

exports.Prisma.SystemAnalyticsScalarFieldEnum = {
  id: 'id',
  metricType: 'metricType',
  metricName: 'metricName',
  value: 'value',
  unit: 'unit',
  period: 'period',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  tags: 'tags',
  metadata: 'metadata',
  timestamp: 'timestamp'
};

exports.Prisma.AnalyticsReportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  reportType: 'reportType',
  reportName: 'reportName',
  description: 'description',
  dateFrom: 'dateFrom',
  dateTo: 'dateTo',
  filters: 'filters',
  parameters: 'parameters',
  data: 'data',
  dataHash: 'dataHash',
  lastUpdated: 'lastUpdated',
  isScheduled: 'isScheduled',
  scheduleConfig: 'scheduleConfig',
  isPublic: 'isPublic',
  sharedWith: 'sharedWith',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  SUPER_ADMIN: 'SUPER_ADMIN'
};

exports.PaymentMethodType = exports.$Enums.PaymentMethodType = {
  CARD: 'CARD',
  PAYPAL: 'PAYPAL',
  BANK_ACCOUNT: 'BANK_ACCOUNT',
  DIGITAL_WALLET: 'DIGITAL_WALLET',
  CRYPTO: 'CRYPTO'
};

exports.PlatformType = exports.$Enums.PlatformType = {
  ADS: 'ADS',
  SURVEY: 'SURVEY',
  INVESTMENT: 'INVESTMENT',
  AFFILIATE: 'AFFILIATE',
  OTHER: 'OTHER'
};

exports.FundingStatus = exports.$Enums.FundingStatus = {
  ACTIVE: 'ACTIVE',
  PAUSED: 'PAUSED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  DEPOSIT: 'DEPOSIT',
  WITHDRAWAL: 'WITHDRAWAL',
  PROFIT: 'PROFIT',
  SUBSCRIPTION: 'SUBSCRIPTION',
  REFUND: 'REFUND'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  FUNDING_UPDATE: 'FUNDING_UPDATE',
  TRANSACTION_ALERT: 'TRANSACTION_ALERT',
  SYSTEM_ALERT: 'SYSTEM_ALERT',
  SECURITY_ALERT: 'SECURITY_ALERT',
  MARKETING: 'MARKETING',
  PAYMENT_REMINDER: 'PAYMENT_REMINDER',
  SUBSCRIPTION_REMINDER: 'SUBSCRIPTION_REMINDER',
  PLATFORM_MAINTENANCE: 'PLATFORM_MAINTENANCE',
  NEW_FEATURE: 'NEW_FEATURE',
  ACHIEVEMENT: 'ACHIEVEMENT'
};

exports.DeviceType = exports.$Enums.DeviceType = {
  ANDROID: 'ANDROID',
  IOS: 'IOS',
  WEB: 'WEB',
  DESKTOP: 'DESKTOP'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  PAUSED: 'PAUSED',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

exports.SyncStatus = exports.$Enums.SyncStatus = {
  SYNCED: 'SYNCED',
  PENDING: 'PENDING',
  CONFLICT: 'CONFLICT',
  ERROR: 'ERROR',
  OFFLINE: 'OFFLINE'
};

exports.Prisma.ModelName = {
  User: 'User',
  BankAccount: 'BankAccount',
  PaymentMethod: 'PaymentMethod',
  FundingPlatform: 'FundingPlatform',
  Funding: 'Funding',
  Transaction: 'Transaction',
  Subscription: 'Subscription',
  NotificationSettings: 'NotificationSettings',
  UserDevice: 'UserDevice',
  Notification: 'Notification',
  SyncLog: 'SyncLog',
  OfflineQueue: 'OfflineQueue',
  SyncConflict: 'SyncConflict',
  UserAnalytics: 'UserAnalytics',
  FundingAnalytics: 'FundingAnalytics',
  SystemAnalytics: 'SystemAnalytics',
  AnalyticsReport: 'AnalyticsReport'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\flutter\\FundingMachine\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\flutter\\FundingMachine\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                   String                @id @default(uuid())\n  name                 String\n  email                String                @unique\n  phone                String?               @unique\n  password             String\n  avatar               String?\n  isVerified           Boolean               @default(false)\n  role                 Role                  @default(USER)\n  bankAccounts         BankAccount[]\n  fundings             Funding[]\n  transactions         Transaction[]\n  subscriptions        Subscription[]\n  paymentMethods       PaymentMethod[]\n  notificationSettings NotificationSettings?\n  devices              UserDevice[]\n  notifications        Notification[]\n  userAnalytics        UserAnalytics[]\n  fundingAnalytics     FundingAnalytics[]\n  analyticsReports     AnalyticsReport[]\n  syncLogs             SyncLog[]\n  syncConflicts        SyncConflict[]\n  offlineQueues        OfflineQueue[]\n  createdAt            DateTime              @default(now())\n  updatedAt            DateTime              @updatedAt\n}\n\nmodel BankAccount {\n  id            String   @id @default(uuid())\n  userId        String\n  user          User     @relation(fields: [userId], references: [id])\n  bankCode      String\n  accountNumber String\n  accountName   String\n  isDefault     Boolean  @default(false)\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  @@unique([userId, bankCode, accountNumber])\n}\n\nmodel PaymentMethod {\n  id          String            @id @default(uuid())\n  userId      String\n  user        User              @relation(fields: [userId], references: [id])\n  type        PaymentMethodType\n  provider    String? // e.g., 'visa', 'mastercard', 'paypal', 'stripe'\n  last4       String? // Last 4 digits for cards\n  expiryMonth Int? // For cards\n  expiryYear  Int? // For cards\n  isDefault   Boolean           @default(false)\n  isActive    Boolean           @default(true)\n  metadata    Json? // Store additional data like full card info (encrypted)\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n\n  @@unique([userId, type, provider])\n}\n\nmodel FundingPlatform {\n  id               String             @id @default(uuid())\n  name             String             @unique\n  type             PlatformType\n  description      String?\n  apiUrl           String?\n  isActive         Boolean            @default(true)\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  fundings         Funding[]\n  fundingAnalytics FundingAnalytics[]\n}\n\nmodel Funding {\n  id           String          @id @default(uuid())\n  userId       String\n  user         User            @relation(fields: [userId], references: [id])\n  platformId   String\n  platform     FundingPlatform @relation(fields: [platformId], references: [id])\n  amount       Float\n  profitShare  Float\n  status       FundingStatus   @default(ACTIVE)\n  transactions Transaction[]\n  createdAt    DateTime        @default(now())\n  updatedAt    DateTime        @updatedAt\n}\n\nmodel Transaction {\n  id          String            @id @default(uuid())\n  userId      String\n  user        User              @relation(fields: [userId], references: [id])\n  fundingId   String?\n  funding     Funding?          @relation(fields: [fundingId], references: [id])\n  type        TransactionType\n  amount      Float\n  status      TransactionStatus @default(PENDING)\n  description String?\n  metadata    Json?\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n}\n\nmodel Subscription {\n  id          String             @id @default(uuid())\n  userId      String\n  user        User               @relation(fields: [userId], references: [id])\n  planId      String\n  amount      Float\n  startDate   DateTime\n  endDate     DateTime?\n  status      SubscriptionStatus @default(ACTIVE)\n  autoRenew   Boolean            @default(true)\n  paymentId   String?\n  cancelledAt DateTime?\n  createdAt   DateTime           @default(now())\n  updatedAt   DateTime           @updatedAt\n}\n\nmodel NotificationSettings {\n  id                String   @id @default(uuid())\n  userId            String   @unique\n  user              User     @relation(fields: [userId], references: [id])\n  pushEnabled       Boolean  @default(true)\n  emailEnabled      Boolean  @default(true)\n  smsEnabled        Boolean  @default(false)\n  fundingUpdates    Boolean  @default(true)\n  transactionAlerts Boolean  @default(true)\n  systemAlerts      Boolean  @default(true)\n  marketingEmails   Boolean  @default(false)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n}\n\nmodel UserDevice {\n  id          String     @id @default(uuid())\n  userId      String\n  user        User       @relation(fields: [userId], references: [id])\n  deviceToken String     @unique\n  deviceType  DeviceType\n  isActive    Boolean    @default(true)\n  lastSeen    DateTime   @default(now())\n  createdAt   DateTime   @default(now())\n  updatedAt   DateTime   @updatedAt\n\n  @@unique([userId, deviceToken])\n}\n\nmodel Notification {\n  id          String           @id @default(uuid())\n  userId      String\n  user        User             @relation(fields: [userId], references: [id])\n  type        NotificationType\n  title       String\n  message     String\n  data        Json? // Additional data for the notification\n  isRead      Boolean          @default(false)\n  isDelivered Boolean          @default(false)\n  deliveredAt DateTime?\n  readAt      DateTime?\n  expiresAt   DateTime?\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n}\n\nmodel SyncLog {\n  id                String     @id @default(uuid())\n  userId            String\n  user              User       @relation(fields: [userId], references: [id])\n  deviceId          String\n  status            SyncStatus @default(PENDING)\n  syncedAt          DateTime   @default(now())\n  conflictsResolved Int        @default(0)\n  error             String?\n  version           BigInt\n  createdAt         DateTime   @default(now())\n  updatedAt         DateTime   @updatedAt\n}\n\nmodel OfflineQueue {\n  id          String    @id @default(uuid())\n  userId      String\n  user        User      @relation(fields: [userId], references: [id])\n  deviceId    String\n  operation   String // 'create', 'update', 'delete'\n  entityType  String // 'funding', 'transaction', 'payment_method'\n  entityId    String\n  data        Json\n  timestamp   DateTime  @default(now())\n  synced      Boolean   @default(false)\n  syncedAt    DateTime?\n  retryCount  Int       @default(0)\n  maxRetries  Int       @default(3)\n  nextRetryAt DateTime?\n  lastError   String?\n  priority    String    @default(\"medium\")\n  // 'low', 'medium', 'high'\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n}\n\nmodel SyncConflict {\n  id             String    @id @default(uuid())\n  userId         String\n  user           User      @relation(fields: [userId], references: [id])\n  entityType     String\n  entityId       String\n  serverData     Json\n  clientData     Json\n  conflictFields String[] // Array of field names that conflict\n  detectedAt     DateTime  @default(now())\n  resolved       Boolean   @default(false)\n  resolution     String? // 'server_wins', 'client_wins', 'merge', 'manual'\n  resolvedData   Json?\n  resolvedAt     DateTime?\n  resolvedBy     String?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n}\n\nmodel UserAnalytics {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  // Session tracking\n  sessionId       String\n  sessionStart    DateTime  @default(now())\n  sessionEnd      DateTime?\n  sessionDuration Int? // in seconds\n\n  // Page/Screen tracking\n  screenName     String\n  route          String?\n  previousScreen String?\n\n  // User actions\n  action        String // 'view', 'click', 'search', 'filter', 'create', 'update', 'delete', 'share', 'export'\n  actionDetails Json? // Additional details about the action\n\n  // Device and platform info\n  deviceType     String // 'mobile', 'tablet', 'desktop'\n  clientPlatform String // 'android', 'ios', 'web', 'windows', 'macos', 'linux'\n  appVersion     String?\n  deviceInfo     Json? // Additional device information\n\n  // Location data (optional)\n  country String?\n  region  String?\n  city    String?\n\n  // Metadata\n  ipAddress String?\n  userAgent String?\n  timestamp DateTime @default(now())\n\n  // Performance metrics\n  loadTime     Int? // Page load time in milliseconds\n  errorCount   Int   @default(0)\n  errorDetails Json? // Any errors encountered\n\n  @@index([userId, timestamp])\n  @@index([sessionId])\n  @@index([screenName])\n  @@index([action])\n  @@map(\"user_analytics\")\n}\n\nmodel FundingAnalytics {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  // Platform interaction\n  platformId String\n  platform   FundingPlatform @relation(fields: [platformId], references: [id], onDelete: Cascade)\n\n  // Interaction type\n  interactionType String // 'view', 'favorite', 'apply', 'funded', 'review', 'share'\n\n  // Financial data\n  amountInvested Decimal? @db.Decimal(15, 2)\n  expectedReturn Decimal? @db.Decimal(5, 2)\n  riskLevel      String? // 'low', 'medium', 'high'\n\n  // User feedback\n  rating              Int? // 1-5 star rating\n  review              String?\n  recommendationScore Int? // -10 to 10, how likely to recommend\n\n  // Conversion tracking\n  conversionStep  String? // 'discovery', 'research', 'application', 'funding', 'monitoring'\n  conversionValue Decimal? @db.Decimal(15, 2)\n\n  // Time tracking\n  timeSpent       Int? // Time spent on platform page in seconds\n  firstSeen       DateTime @default(now())\n  lastInteraction DateTime @default(now())\n\n  // Metadata\n  sessionId      String\n  deviceType     String\n  devicePlatform String // 'android', 'ios', 'web', etc.\n  timestamp      DateTime @default(now())\n\n  @@index([userId, platformId])\n  @@index([interactionType])\n  @@index([timestamp])\n  @@map(\"funding_analytics\")\n}\n\nmodel SystemAnalytics {\n  id String @id @default(cuid())\n\n  // System metrics\n  metricType String // 'performance', 'error', 'usage', 'business'\n  metricName String // 'api_response_time', 'error_rate', 'active_users', 'total_funding', etc.\n\n  // Metric value\n  value Decimal @db.Decimal(20, 6)\n  unit  String? // 'ms', 'count', 'percentage', 'currency', etc.\n\n  // Aggregation info\n  period      String // 'minute', 'hour', 'day', 'week', 'month'\n  periodStart DateTime\n  periodEnd   DateTime\n\n  // Metadata\n  tags      Json? // Additional tags for categorization\n  metadata  Json? // Additional metadata\n  timestamp DateTime @default(now())\n\n  @@index([metricType, metricName])\n  @@index([period, periodStart])\n  @@index([timestamp])\n  @@map(\"system_analytics\")\n}\n\nmodel AnalyticsReport {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  // Report configuration\n  reportType  String // 'user_engagement', 'financial_performance', 'platform_usage', 'custom'\n  reportName  String\n  description String?\n\n  // Date range\n  dateFrom DateTime\n  dateTo   DateTime\n\n  // Filters and parameters\n  filters    Json // Report-specific filters\n  parameters Json? // Additional parameters\n\n  // Report data (cached)\n  data        Json // Cached report data\n  dataHash    String // Hash of the data for cache invalidation\n  lastUpdated DateTime @default(now())\n\n  // Scheduling\n  isScheduled    Boolean @default(false)\n  scheduleConfig Json? // Cron expression or schedule config\n\n  // Access control\n  isPublic   Boolean @default(false)\n  sharedWith Json? // List of user IDs with access\n\n  // Metadata\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([userId, reportType])\n  @@index([isScheduled])\n  @@map(\"analytics_reports\")\n}\n\nenum Role {\n  USER\n  ADMIN\n  SUPER_ADMIN\n}\n\nenum PaymentMethodType {\n  CARD\n  PAYPAL\n  BANK_ACCOUNT\n  DIGITAL_WALLET\n  CRYPTO\n}\n\nenum PlatformType {\n  ADS\n  SURVEY\n  INVESTMENT\n  AFFILIATE\n  OTHER\n}\n\nenum FundingStatus {\n  ACTIVE\n  PAUSED\n  COMPLETED\n  CANCELLED\n}\n\nenum TransactionType {\n  DEPOSIT\n  WITHDRAWAL\n  PROFIT\n  SUBSCRIPTION\n  REFUND\n}\n\nenum TransactionStatus {\n  PENDING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\nenum NotificationType {\n  FUNDING_UPDATE\n  TRANSACTION_ALERT\n  SYSTEM_ALERT\n  SECURITY_ALERT\n  MARKETING\n  PAYMENT_REMINDER\n  SUBSCRIPTION_REMINDER\n  PLATFORM_MAINTENANCE\n  NEW_FEATURE\n  ACHIEVEMENT\n}\n\nenum DeviceType {\n  ANDROID\n  IOS\n  WEB\n  DESKTOP\n}\n\nenum SubscriptionStatus {\n  ACTIVE\n  PAUSED\n  CANCELLED\n  EXPIRED\n}\n\nenum SyncStatus {\n  SYNCED\n  PENDING\n  CONFLICT\n  ERROR\n  OFFLINE\n}\n",
  "inlineSchemaHash": "5b9591a9b063addb7ff149ccbb3f7d98119207294a206058008de3fdc59402ce",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"bankAccounts\",\"kind\":\"object\",\"type\":\"BankAccount\",\"relationName\":\"BankAccountToUser\"},{\"name\":\"fundings\",\"kind\":\"object\",\"type\":\"Funding\",\"relationName\":\"FundingToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToUser\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"paymentMethods\",\"kind\":\"object\",\"type\":\"PaymentMethod\",\"relationName\":\"PaymentMethodToUser\"},{\"name\":\"notificationSettings\",\"kind\":\"object\",\"type\":\"NotificationSettings\",\"relationName\":\"NotificationSettingsToUser\"},{\"name\":\"devices\",\"kind\":\"object\",\"type\":\"UserDevice\",\"relationName\":\"UserToUserDevice\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"userAnalytics\",\"kind\":\"object\",\"type\":\"UserAnalytics\",\"relationName\":\"UserToUserAnalytics\"},{\"name\":\"fundingAnalytics\",\"kind\":\"object\",\"type\":\"FundingAnalytics\",\"relationName\":\"FundingAnalyticsToUser\"},{\"name\":\"analyticsReports\",\"kind\":\"object\",\"type\":\"AnalyticsReport\",\"relationName\":\"AnalyticsReportToUser\"},{\"name\":\"syncLogs\",\"kind\":\"object\",\"type\":\"SyncLog\",\"relationName\":\"SyncLogToUser\"},{\"name\":\"syncConflicts\",\"kind\":\"object\",\"type\":\"SyncConflict\",\"relationName\":\"SyncConflictToUser\"},{\"name\":\"offlineQueues\",\"kind\":\"object\",\"type\":\"OfflineQueue\",\"relationName\":\"OfflineQueueToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BankAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BankAccountToUser\"},{\"name\":\"bankCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PaymentMethod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentMethodToUser\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PaymentMethodType\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last4\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiryMonth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiryYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"FundingPlatform\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PlatformType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fundings\",\"kind\":\"object\",\"type\":\"Funding\",\"relationName\":\"FundingToFundingPlatform\"},{\"name\":\"fundingAnalytics\",\"kind\":\"object\",\"type\":\"FundingAnalytics\",\"relationName\":\"FundingAnalyticsToFundingPlatform\"}],\"dbName\":null},\"Funding\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FundingToUser\"},{\"name\":\"platformId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"object\",\"type\":\"FundingPlatform\",\"relationName\":\"FundingToFundingPlatform\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profitShare\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FundingStatus\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"FundingToTransaction\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransactionToUser\"},{\"name\":\"fundingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"funding\",\"kind\":\"object\",\"type\":\"Funding\",\"relationName\":\"FundingToTransaction\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"autoRenew\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"NotificationSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationSettingsToUser\"},{\"name\":\"pushEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"smsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"fundingUpdates\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"transactionAlerts\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"systemAlerts\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"marketingEmails\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserDevice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserDevice\"},{\"name\":\"deviceToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"enum\",\"type\":\"DeviceType\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isDelivered\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SyncLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SyncLogToUser\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SyncStatus\"},{\"name\":\"syncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conflictsResolved\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OfflineQueue\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OfflineQueueToUser\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"synced\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"syncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxRetries\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nextRetryAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastError\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SyncConflict\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SyncConflictToUser\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serverData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"clientData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"conflictFields\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"resolution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolvedData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAnalytics\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessionEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessionDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"screenName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"route\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousScreen\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionDetails\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientPlatform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"loadTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorDetails\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"user_analytics\"},\"FundingAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FundingAnalyticsToUser\"},{\"name\":\"platformId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"object\",\"type\":\"FundingPlatform\",\"relationName\":\"FundingAnalyticsToFundingPlatform\"},{\"name\":\"interactionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountInvested\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"expectedReturn\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"riskLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"review\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recommendationScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversionStep\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversionValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"timeSpent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastInteraction\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"devicePlatform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"funding_analytics\"},\"SystemAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metricType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metricName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"system_analytics\"},\"AnalyticsReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AnalyticsReportToUser\"},{\"name\":\"reportType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reportName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dateTo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"filters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"dataHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isScheduled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scheduleConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sharedWith\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"analytics_reports\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

