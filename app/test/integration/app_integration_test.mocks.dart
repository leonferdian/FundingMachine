// Mocks generated by Mockito 5.4.4 from annotations
// in funding_machine/test/integration/app_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:funding_machine/models/funding_platform_model.dart' as _i2;
import 'package:funding_machine/services/funding_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFundingPlatform_0 extends _i1.SmartFake
    implements _i2.FundingPlatform {
  _FakeFundingPlatform_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FundingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFundingService extends _i1.Mock implements _i3.FundingService {
  MockFundingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i5.Future<List<_i2.FundingPlatform>> getFundingPlatforms(
          {bool? forceRefresh = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFundingPlatforms,
          [],
          {#forceRefresh: forceRefresh},
        ),
        returnValue: _i5.Future<List<_i2.FundingPlatform>>.value(
            <_i2.FundingPlatform>[]),
      ) as _i5.Future<List<_i2.FundingPlatform>>);

  @override
  _i5.Future<_i2.FundingPlatform> createPlatform(
          _i2.FundingPlatform? platform) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPlatform,
          [platform],
        ),
        returnValue:
            _i5.Future<_i2.FundingPlatform>.value(_FakeFundingPlatform_0(
          this,
          Invocation.method(
            #createPlatform,
            [platform],
          ),
        )),
      ) as _i5.Future<_i2.FundingPlatform>);

  @override
  _i5.Future<Map<String, dynamic>> processTransaction({
    required String? platformId,
    required double? amount,
    required String? paymentMethodId,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #processTransaction,
          [],
          {
            #platformId: platformId,
            #amount: amount,
            #paymentMethodId: paymentMethodId,
            #metadata: metadata,
          },
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getTransactionHistory({
    int? limit = 20,
    int? offset = 0,
    String? platformId,
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionHistory,
          [],
          {
            #limit: limit,
            #offset: offset,
            #platformId: platformId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> savePaymentMethod(Map<String, dynamic>? paymentMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePaymentMethod,
          [paymentMethod],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removePaymentMethod(String? paymentMethodId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removePaymentMethod,
          [paymentMethodId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
